@model FurmaGeneral

<div class="row" style="margin-top: 10px;">
    <ul class="nav nav-pills" role="tablist">
        <li class="nav-item">
            <a href="#tab_results" data-toggle="tab" class="nav-link active">Результаты</a>
        </li>
        <li role="presentation">
            <a href="#tab_input" data-toggle="tab" class="nav-link">Исходные данные</a>
        </li>
        <li role="presentation">
            <a href="#tab_prepare" data-toggle="tab" class="nav-link">Предварительные расчеты</a>
        </li>
        <li role="presentation">
            <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button">Графики</a>
            <div class="dropdown-menu">
                <a class="dropdown-item" data-toggle="tab" href="#tab_graph_1">Расход дутья по прибору и фактический</a>
                <a class="dropdown-item" data-toggle="tab" href="#tab_graph_2">Расход ПГ фактический и требуемый</a>
                <a class="dropdown-item" data-toggle="tab" href="#tab_graph_3">Количество тепла на нагрев воды</a>
                <a class="dropdown-item" data-toggle="tab" href="#tab_graph_4">Расход дутья фактический (круг)</a>
            </div>

        </li>
    </ul>
    @*Html.Partial("Partial_MainTable", Model)*@

    <!-- Tab panes -->
    <div class="col-12 tab-content" style="padding-top: 15px;">
        <div role="tabpanel" class="tab-pane active" id="tab_results">
            <h1 align="center" class="ish">Расчет параметров фурменного очага</h1>
            <table class="table" align="center">
                <thead>
                    <tr>
                        <th>Величина, ед. измерения</th>
                        <th>Значение</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Скорость истечения дутья из воздушной фурмы, м/с</td>
                        <td>@Extensions.RoundSmart(Model.VIstDut)</td>
                    </tr>
                    <tr>
                        <td>Кинетическая энергия истечения дутья из фурмы, кгм/с</td>
                        <td>@Extensions.RoundSmart(Model.KinetW)</td>
                    </tr>
                    <tr>
                        <td>Протяженность зоны циркуляции (кислородная часть зоны горения),м</td>
                        <td>@Extensions.RoundSmart(Model.ProtZoniCirk)</td>
                    </tr>
                    <tr>
                        <td>Протяженность окислительной зоны (по 2 % СО2), м</td>
                        <td>@Extensions.RoundSmart(Model.ProtZoniOkisl)</td>
                    </tr>
                    <tr>
                        <td>Длина средней окружности по центрам фурменных очагов, м</td>
                        <td>@Extensions.RoundSmart(Model.DlinSrOkr)</td>
                    </tr>
                    <tr>
                        <td>Суммарная длина малых осей фурменных очагов, м</td>
                        <td>@Extensions.RoundSmart(Model.SumDlinOs)</td>
                    </tr>
                    <tr>
                        <td>Перекрытие (+), разобщение (-) смежных фурменных очагов, м</td>
                        <td>@Math.Round(Model.Perecr, 2)</td>
                    </tr>
                </tbody>
            </table>

            <h1 align="center" class="ish">Расчетные данные фурм</h1>
            <div class="Dvig">
                <table class="table table-bordered" align="center">
                    <thead>
                        <tr>
                            <th>Номер фурмы</th>
                            @for (int i = 0; i < Model.Nfurm; i++)
                            {
                                <th>
                                    @(" " + (i + 1))
                                    <input type="hidden" name="input.Furm[@i].NumberOfFurm" value="@(i+1))" />
                                    <input type="hidden" name="input.Furm.Index" value="@i" />
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th>Кол-во тепла на нагрев воды, кВт</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].KolTepla)</td>

                            }
                            @*<td>
                                <td>@Model.Furm.Average(x => x.KolTepla)</td>*@
                        </tr>

                        <tr>
                            <th>Расход дутья через фурму по прибору, м3/мин</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].RashDutPribor)</td>
                            }
                        </tr>
                        <tr>
                            <th>Факт. расход дутья через фурму, м3/мин</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].FactRashDut)</td>
                            }
                            @*<td><input type="text" name="input.SrFactRashDut" /></td>*@
                        </tr>
                        <tr>
                            <th>Расчетный относительный расход дутья через фурму</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].RasOtnos)</td>

                            }
                        </tr>


                        <tr>
                            <th>Кол-во сожжен.углерода , кг/мин</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].KolUgler)</td>

                            }
                        </tr>
                        <!-- Не выводить (sportsoft от 09.12)
                        <tr>
                            <th>Расход ПГ на 1 кг углерода, м3/кгС</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].RashPGNaKG)</td>

                            }
                        </tr> -->
                        <tr>
                            <th>Теплосодерж. горновых газов, кДж/м3</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].TeplosodGorn)</td>

                            }
                        </tr>
                        <tr>
                            <th>Теорет. тем-ра горения, &deg;С</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].TeorTGor)</td>

                            }
                        </tr>
                        <tr>
                            <th>Скорость истечения дутья из фурм, м/с</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].VIstDut)</td>

                            }
                        </tr>
                        <tr>
                            <th>Кинетическая энергия истечения, кгм/с</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].KinetW)</td>

                            }
                        </tr>
                        <tr>
                            <th>Протяженность зоны циркуляции, м</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].ProtZoniCirk)</td>

                            }
                        </tr>
                        <tr>
                            <th>Протяженность окислительной зоны, м</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].ProtZoniOkisl)</td>

                            }
                        </tr>
                        <tr>
                            <th>Отношен. V пг/V дутья, %</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].OtnoshVPGD)</td>

                            }
                        </tr>
                        <tr>
                            <th>Теплосодержание горновых газов при заданном значении Тт, кДж/м3</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].TeplosodPriZadZn1)</td>
                            }
                        </tr>
                        <!-- Не выводить (sportsoft от 09.12)
                            <tr>
                            <th>Расход газа для поддержания теорет. тем-ры горения, м3/кг С</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].RashPodderz)</td>
                            }
                        </tr> -->
                        <tr>
                            <th>Требуемый расход газа для поддержания теоретической температуры горения, м3/ч</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].TrebRashGaz)</td>
                            }
                        </tr>
                        <tr>
                            <th>Площадь фурм. очага, м2</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Extensions.RoundSmart(Model.Furm[i].SFurmOchag)</td>
                            }
                        </tr>

                    </tbody>
                </table>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab_input">
            <h1 align="center" class="ish">Исходные данные для печи</h1>
            <table class="table" align="center">
                <thead>
                    <tr>
                        <th>Величина, ед. измерения</th>
                        <th>Значение</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Диаметр горна доменной печи, м</td>
                        <td>@Model.DiGorn</td>
                    </tr>
                    <tr>
                        <td>Полезный объем печи, м3</td>
                        <td>@Model.Vpolez</td>
                    </tr>
                    <tr>
                        <td>Производительность печи, т/сут</td>
                        <td>@Model.Proizv</td>
                    </tr>
                    <tr>
                        <td>Число воздушных фурм, шт</td>
                        <td>@Model.Nfurm</td>
                    </tr>

                    <tr>
                        <td>Число работающих воздушных фурм, шт</td>
                        <td>@Model.NrabFurm</td>
                    </tr>
                    <tr>
                        <td>Диаметр фурм, мм</td>
                        <td>@Model.DiamFurm</td>
                    </tr>
                    <tr>
                        <td>Высов фурм, мм</td>
                        <td>@Model.VisFurm</td>
                    </tr>
                </tbody>
            </table>

            <h1 align="center" class="ish">Исходные данные для технологического процесса</h1>
            <table class="table" align="center">
                <thead>
                    <tr>
                        <th>Величина, ед. измерения</th>
                        <th>Значение</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Расход дутья, м<sup>3</sup>/мин</td>
                        <td>@Model.RashDut</td>
                    </tr>
                    <tr>
                        <td>Давление дутья, ати</td>
                        <td>@Model.DavlDut</td>
                    </tr>
                    <tr>
                        <td>Температура дутья, &deg;С</td>
                        <td>@Model.TDut</td>
                    </tr>
                    <tr>
                        <td>Влажность дутья, г/м<sup>3</sup></td>
                        <td>@Model.VlazDut</td>
                    </tr>
                    <tr>
                    <tr>
                        <td>Содержание кислорода в дутье, %</td>
                        <td>@Model.SodKislorod</td>
                    </tr>
                    <tr>
                    <tr>
                        <td>Расход природного газа, м<sup>3</sup>/т чуг</td>
                        <td>@Model.RashPrirGaz</td>
                    </tr>
                    <tr>
                        <td>Коэффициент сжатия фурменного очага (в плане)</td>
                        <td>@Model.Kszh</td>
                    </tr>
                    <tr>
                        <td>Принятые потери расхода дутья по тракту, %</td>
                        <td>@Model.PotPoTract</td>
                    </tr>
                    <tr>
                        <td>Удельный расход кокса, кг/т чуг</td>
                        <td>@Model.UdRashKoks</td>
                    </tr>
                    <tr>
                        <td>Реакционная способность кокса, %</td>
                        <td>@Model.ReaKoks</td>
                    </tr>
                </tbody>
            </table>

            <h1 align="center" class="ish">Исходные данные фурм</h1>
            <div class="Dvig">
                <table class="table table-bordered" align="center">
                    <thead>
                        <tr>
                            <th>Номер фурмы</th>
                            @for (int i = 0; i < Model.Nfurm; i++)
                            {
                                <th>
                                    @("" + (i + 1))
                                    <input type="hidden" name="input.Raschet[@i].NumberOfFurm" value="@(i+1))" />
                                    <input type="hidden" name="input.Raschet.Index" value="@i" />
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th>Расход газа на фурму, м<sup>3</sup>/ч</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Model.Furm[i].RashGazNaF</td>
                            }
                        </tr>
                        <tr>
                            <th>Расход воды на фурму, м<sup>3</sup>/ч</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Model.Furm[i].RashVodiNaF</td>
                            }
                        </tr>
                        <tr>
                            <th>Тем-рный перепад воды на фурме, &deg;С</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Model.Furm[i].Tperepad</td>
                            }
                        <tr>
                        <tr>
                            <th>Требуемое значение теоретическое температуры горения, &deg;С</th>
                            @for (int i = 0; i < 20; i++)
                            {
                                <td>@Model.Furm[i].TrebZnTeor</td>
                            }

                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
        <div role="tabpanel" class="tab-pane" id="tab_prepare">
            <h1 align="center" class="ish">Предварительные расчеты распределения дутья по фурмам</h1>
            <table class="table" align="center">
                <thead>
                    <tr>
                        <th>Величина, ед. измерения</th>
                        <th>Значение</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Теплоемкость кислорода при тем-ре дутья, кДж/(м3*к)</td>
                        <td>@Extensions.RoundSmart(Model.TepKi)</td>
                    </tr>
                    <tr>
                        <td>Теплоемкость азота при тем-ре дутья, кДж/(м3*К)</td>
                        <td>@Extensions.RoundSmart(Model.TepAz)</td>
                    </tr>
                    <tr>
                        <td>Теплоемкость двухатомных газов при Tд, кдж/(м3*К)</td>
                        <td>@Extensions.RoundSmart(Model.TepDvuh)</td>
                    </tr>
                    <tr>
                        <td>Теплоемкость паров воды при Tд, кДж/(м3*к) </td>
                        <td>@Extensions.RoundSmart(Model.TepPar)</td>
                    </tr>
                    @*<tr>
                            <td>Длина средней окружности по центрам фурменных очагов, м</td>
                            <td><input type="text" name="input.RashUgl" /></td>
                        </tr>*@
                    <tr>
                        <td>Расход дутья на 1 кг углерода, м3/кг С</td>
                        <td>@Extensions.RoundSmart(Model.RashUgl)</td>
                    </tr>
                    <tr>
                        <td>Расход дутья для сжигания 1 м3 газа, м3/м3 </td>
                        <td>@Extensions.RoundSmart(Model.RashGaz)</td>
                    </tr>
                    <tr>
                        <td>Выход горнового газа при сжигании 1 кг углерода, м3/кгС</td>
                        <td>@Extensions.RoundSmart(Model.RashGorn)</td>
                    </tr>
                    <tr>
                        <td>Выход горнового газа при сжигании 1 м3 газа, м3/м3</td>
                        <td>@Extensions.RoundSmart(Model.VihGorn)</td>
                    </tr>
                    @*<tr>
                            <td>Протяженность зоны циркуляции (кислородная часть зоны горения),м</td>
                            <td>@Model.Perecr</td>
                        </tr>*@
                    <tr>
                        <td>Теплосодержание дутья, кДж/м3</td>
                        <td>@Extensions.RoundSmart(Model.TeplosodDut)</td>
                    </tr>
                    <tr>
                        <td>Теплосодержание кокса, приходящего к фурмам, кДж/кг </td>
                        <td>@Extensions.RoundSmart(Model.TeplosodKoks)</td>
                    </tr>
                    <tr>
                        <td>Теплоемкость дутья, кДж/(м3*К)</td>
                        <td>@Extensions.RoundSmart(Model.TeploemkDut)</td>
                    </tr>
                    <tr>
                        <td>Теплоемкость воды, Дж/(кг·град)</td>
                        <td>@Extensions.RoundSmart(Model.TeploemkVod)</td>
                    </tr>
                </tbody>
            </table>

        </div>
        <div role="tabpanel" class="tab-pane" id="tab_graph_1">
            <div style="width: 100%;">&nbsp;</div>
            <!-- ГРАФИК ПАЛКИ расход дутья по фурмам фактический FactRashDut и по прибору RashDutPribor -->
            <canvas id="densityChart3" width="600" height="400"></canvas>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab_graph_2">
            <div style="width: 100%;">&nbsp;</div>
            @* ГРАФИК ПАЛКИ расход природного газа по фурмам фактический RashGazNaF и требуемый TrebRashGaz *@
            <canvas id="densityChart1" width="600" height="400"></canvas>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab_graph_3">
            <div style="width: 100%;">&nbsp;</div>
            @* ГРАФИК ПАЛКИ Кол-во тепла на нагрев воды, кВт KolTepla *@
            <canvas id="densityChart2" width="600" height="400"></canvas>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab_graph_4">
            <div style="width: 100%;">&nbsp;</div>
            @* ГРАФИК РАДАР скорость истечения дутья VIstDut *@
            <canvas id="marksChart1" width="940" height="564"></canvas>
        </div>

        <script>
            var dataFactRashDut = @Json.Serialize(Model.Furm.Select(x => x.FactRashDut).ToList());
        var NFurm = @Model.Nfurm;
        var NFurms = [];

        for (var i = 1; i <= NFurm; i++) {
            NFurms.push(i);
        }
        var dataRashDutPribor = @Json.Serialize(Model.Furm.Select(x => x.RashDutPribor).ToList());
        var NFurm = @Model.Nfurm;
        var NFurms = [];

        for (var i = 1; i <= NFurm; i++) {
            NFurms.push(i);
        }

        var densityCanvas = document.getElementById("densityChart3");

        Chart.defaults.global.defaultFontSize = 16;

        var densityData = {
            label: 'Факт. расход дутья через фурму, м3/мин',
            data: dataFactRashDut,
            backgroundColor: 'rgba(0, 99, 132, 0.6)',
            borderWidth: 0,

        };

        var gravityData = {
            label: 'Расход дутья по прибору, м3/мин',
            data: dataRashDutPribor,
            backgroundColor: 'rgba(99, 132, 0, 0.6)',
            borderWidth: 0,

        };

        var planetData = {
            labels: ["Фурма №1", "Фурма №2", "Фурма №3", "Фурма №4", "Фурма №5", "Фурма №6", "Фурма №7", "Фурма №8", "Фурма №9", "Фурма №10", "Фурма №11", "Фурма №12", "Фурма №13", "Фурма №14", "Фурма №15", "Фурма №16", "Фурма №17", "Фурма №18", "Фурма №19", "Фурма №20"],
            datasets: [densityData, gravityData]
        };

            var chartOptions = {
            scales: {
                xAxes: [{
                    barPercentage: 1,
                    categoryPercentage: 0.6
                }],
                yAxes: [{
                    ticks: {
                        max: 150,
                        min: 0,
                        stepSize: 10
                    }

                }]
            }
        };

        var chart1 = new Chart(densityCanvas, {
            type: 'bar',
            data: planetData,
            options: chartOptions
        });
        </script>

        <script>
            var dataRashGazNaF = @Json.Serialize(Model.Furm.Select(x => x.RashGazNaF).ToList());
        var NFurm = @Model.Nfurm;
        var NFurms = [];

        for (var i = 1; i <= NFurm; i++) {
            NFurms.push(i);
        }
                var dataTrebRashGaz = @Json.Serialize(Model.Furm.Select(x => x.TrebRashGaz).ToList());
        var NFurm = @Model.Nfurm;
        var NFurms = [];

        for (var i = 1; i <= NFurm; i++) {
            NFurms.push(i);
        }

        var densityCanvas = document.getElementById("densityChart1");

        var densityData = {
            label: 'Расход газа на фурму фактический, м3/ч',
            data: dataRashGazNaF,
            backgroundColor: 'rgba(0, 99, 132, 0.6)',
            borderWidth: 0,
        };

        var gravityData = {
            label: 'Требуемый расход газа для поддержания теоретической температуры горения, м3/ч',
            data: dataTrebRashGaz,
            backgroundColor: 'rgba(99, 132, 0, 0.6)',
            borderWidth: 0,

        };

        var planetData = {
            labels: ["Фурма №1", "Фурма №2", "Фурма №3", "Фурма №4", "Фурма №5", "Фурма №6", "Фурма №7", "Фурма №8", "Фурма №9", "Фурма №10", "Фурма №11", "Фурма №12", "Фурма №13", "Фурма №14", "Фурма №15", "Фурма №16", "Фурма №17", "Фурма №18", "Фурма №19", "Фурма №20"],
            datasets: [densityData, gravityData]
        };

        var chartOptions = {
            scales: {
                xAxes: [{
                    barPercentage: 1,
                    categoryPercentage: 0.6
                }],
                yAxes: [{
                    ticks: {
                        max: 1000,
                        min: 0,
                        stepSize: 50
                    }

                }]
            }
        };

        var barChart = new Chart(densityCanvas, {
            type: 'bar',
            data: planetData,
            options: chartOptions
        });
        </script>

        <script>
            var dataKolTepla = @Json.Serialize(Model.Furm.Select(x => x.KolTepla).ToList());
        var NFurm = @Model.Nfurm;
        var NFurms = [];

        for (var i = 1; i <= NFurm; i++) {
            NFurms.push(i);
        }
        var densityCanvas = document.getElementById("densityChart2");

        var densityData = {
            label: 'Кол-во тепла на нагрев воды, кВт',
            data: dataKolTepla,
            backgroundColor: [
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)', //цвет столбов соответственно для каждого
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)',
                'rgba(160, 99, 132, 0.6)'
            ],
            borderColor: [
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)', //рамка столбов
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)',
                'rgba(160, 99, 132, 1)'
            ],
            borderWidth: 2, //оформление рамки
            hoverBorderWidth: 0 //оформление исчезновение рамки при наведении
        };

        var barChart = new Chart(densityCanvas, {
            type: 'bar',
            data: {
                labels: ["Фурма №1", "Фурма №2", "Фурма №3", "Фурма №4", "Фурма №5", "Фурма №6", "Фурма №7", "Фурма №8", "Фурма №9", "Фурма №10", "Фурма №11", "Фурма №12", "Фурма №13", "Фурма №14", "Фурма №15", "Фурма №16", "Фурма №17", "Фурма №18", "Фурма №19", "Фурма №20"],
                datasets: [densityData]
            }
        });
        </script>

        <script>
            var dataVIstDut = @Json.Serialize(Model.Furm.Select(x => x.VIstDut).ToList());
            var NFurm = @Model.Nfurm;
            var NFurms = [];

            for (var i = 1; i <= NFurm; i++) {
                NFurms.push(i);
            }

            var marksCanvas = document.getElementById("marksChart1");

            var marksData = {
                labels: NFurms,
                datasets: [{
                    label: "Расход дутья по фурмам м3/мин",
                    backgroundColor: "transparent",
                    borderColor: "rgba(200,0,0,0.6)",
                    fill: false,
                    radius: 6,
                    pointRadius: 6,
                    pointBorderWidth: 3,
                    pointBackgroundColor: "orange",
                    pointBorderColor: "rgba(200,0,0,0.6)",
                    pointHoverRadius: 10,
                    data: dataVIstDut
                }
                //, { //    label: "Student B", //    backgroundColor: "transparent", //    borderColor: "rgba(0,0,200,0.6)", //    fill: false,//    radius: 6,//    pointRadius: 6,//    pointBorderWidth: 3,//    pointBackgroundColor: "cornflowerblue",//    pointBorderColor: "rgba(0,0,200,0.6)",//    pointHoverRadius: 10,//    data: [23, 65, 60, 70, 70, 75]//}
                    ]
            };

            var chartOptions = {
                scale: {
                    ticks: {
                        beginAtZero: true,
                        min: 0,
                        max: 300,
                        stepSize: 20
                    },
                    pointLabels: {
                        fontSize: 18
                    }
                },
                legend: {
                    position: 'left'
                }
            };

            var radarChart = new Chart(marksCanvas, {
                type: 'radar',
                data: marksData,
                options: chartOptions
            });
        </script>

    </div>
</div>

@section Scripts {
}